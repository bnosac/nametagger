// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// nametag_info
Rcpp::List nametag_info(SEXP model);
RcppExport SEXP _nametagger_nametag_info(SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type model(modelSEXP);
    rcpp_result_gen = Rcpp::wrap(nametag_info(model));
    return rcpp_result_gen;
END_RCPP
}
// nametag_load_model
SEXP nametag_load_model(const char* file_model);
RcppExport SEXP _nametagger_nametag_load_model(SEXP file_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type file_model(file_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(nametag_load_model(file_model));
    return rcpp_result_gen;
END_RCPP
}
// nametag_annotate
Rcpp::DataFrame nametag_annotate(SEXP model, Rcpp::StringVector x, Rcpp::StringVector docid, Rcpp::IntegerVector sentenceid);
RcppExport SEXP _nametagger_nametag_annotate(SEXP modelSEXP, SEXP xSEXP, SEXP docidSEXP, SEXP sentenceidSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type model(modelSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type docid(docidSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type sentenceid(sentenceidSEXP);
    rcpp_result_gen = Rcpp::wrap(nametag_annotate(model, x, docid, sentenceid));
    return rcpp_result_gen;
END_RCPP
}
// nametag_train
void nametag_train(std::string modelname, std::string file, const std::string type, const char* features_file, const std::string input_type, int stages, int iterations, double missing_weight, double initial_learning_rate, double final_learning_rate, double gaussian, int hidden_layer, bool has_holdout, const char* heldout_file);
RcppExport SEXP _nametagger_nametag_train(SEXP modelnameSEXP, SEXP fileSEXP, SEXP typeSEXP, SEXP features_fileSEXP, SEXP input_typeSEXP, SEXP stagesSEXP, SEXP iterationsSEXP, SEXP missing_weightSEXP, SEXP initial_learning_rateSEXP, SEXP final_learning_rateSEXP, SEXP gaussianSEXP, SEXP hidden_layerSEXP, SEXP has_holdoutSEXP, SEXP heldout_fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type modelname(modelnameSEXP);
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    Rcpp::traits::input_parameter< const std::string >::type type(typeSEXP);
    Rcpp::traits::input_parameter< const char* >::type features_file(features_fileSEXP);
    Rcpp::traits::input_parameter< const std::string >::type input_type(input_typeSEXP);
    Rcpp::traits::input_parameter< int >::type stages(stagesSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< double >::type missing_weight(missing_weightSEXP);
    Rcpp::traits::input_parameter< double >::type initial_learning_rate(initial_learning_rateSEXP);
    Rcpp::traits::input_parameter< double >::type final_learning_rate(final_learning_rateSEXP);
    Rcpp::traits::input_parameter< double >::type gaussian(gaussianSEXP);
    Rcpp::traits::input_parameter< int >::type hidden_layer(hidden_layerSEXP);
    Rcpp::traits::input_parameter< bool >::type has_holdout(has_holdoutSEXP);
    Rcpp::traits::input_parameter< const char* >::type heldout_file(heldout_fileSEXP);
    nametag_train(modelname, file, type, features_file, input_type, stages, iterations, missing_weight, initial_learning_rate, final_learning_rate, gaussian, hidden_layer, has_holdout, heldout_file);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_nametagger_nametag_info", (DL_FUNC) &_nametagger_nametag_info, 1},
    {"_nametagger_nametag_load_model", (DL_FUNC) &_nametagger_nametag_load_model, 1},
    {"_nametagger_nametag_annotate", (DL_FUNC) &_nametagger_nametag_annotate, 4},
    {"_nametagger_nametag_train", (DL_FUNC) &_nametagger_nametag_train, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_nametagger(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
